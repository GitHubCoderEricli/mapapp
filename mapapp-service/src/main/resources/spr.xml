<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:property-placeholder location="classpath:sys.properties"/>
    <context:annotation-config/>
    <context:component-scan base-package="com.huashan.core" />
    <mvc:annotation-driven />

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <!-- 设置数据库方言 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!-- 设置自动创建|更新|验证数据库表结构 -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <!-- 是否在控制台显示sql -->
                <prop key="hibernate.show_sql">true</prop>
                <!-- 是否格式化sql，优化显示 -->
                <prop key="hibernate.format_sql">true</prop>
                <!-- 是否开启二级缓存 -->
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <!-- 是否开启查询缓存 -->
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <!-- 数据库批量查询最大数 -->
                <prop key="hibernate.jdbc.fetch_size">50</prop>
                <!--hibernate.jdbc.fetch_size=50-->
                <!-- 数据库批量更新、添加、删除操作最大数 -->
                <prop key="hibernate.jdbc.batch_size">50</prop>
                <!--hibernate.jdbc.batch_size=50-->
                <!-- 是否自动提交事务 -->
                <prop key="hibernate.connection.autocommit">true</prop>
                <!--hibernate.connection.autocommit=true-->
                <!-- 指定hibernate在何时释放JDBC连接 -->
                <prop key="hibernate.connection.release_mode">auto</prop>
                <!--hibernate.connection.release_mode=auto-->
                <!-- 创建session方式 hibernate4.x 的方式 -->
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
                <!--hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext-->
                <!-- javax.persistence.validation.mode默认情况下是auto的，就是说如果不设置的话它是会自动去你的classpath下面找一个bean-validation**包
                    所以把它设置为none即可 -->
                <prop key="javax.persistence.validation.mode">none</prop>
                <!--javax.persistence.validation.mode=none-->
                <!--<prop key="hibernate.current_session_context_class">thread</prop>-->
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.huashan.core</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="url" value="jdbc:mysql://${jdbc.url}?useUnicode=true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull" />
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>



    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 注解实现事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

    <bean name="quartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="configLocation" value="classpath:quartz.properties"/>
    </bean>
</beans>